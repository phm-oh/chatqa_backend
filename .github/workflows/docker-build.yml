# Path: backend/.github/workflows/docker-build.yml
name: Build and Auto Deploy Backend

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: phm-oh/chatqa_backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    # 1. Build และ Push Image
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value={{date 'YYYYMMDD-HHmmss'}},enable={{is_default_branch}}

    # ⭐ Build แล้ว force ไม่ใช้ cache + unique tag
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        no-cache: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          NODE_ENV=production
          BUILD_TIME=${{ github.run_number }}

    # 2. ⭐ Safe Deploy - ไม่ลบ Portainer!
    - name: Deploy to Production Server
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        script: |
          echo "🔄 Starting Safe Backend Deployment..."
          
          # Update chatqa-deploy repo
          cd /home/oem/chatqa-deploy
          echo "📡 Syncing deployment config from GitHub..."
          git pull origin main
          
          # ⭐ Safe cleanup - ลบเฉพาะ ChatQA backend
          echo "🛑 Safe cleanup - ลบเฉพาะ ChatQA backend..."
          docker stop chatqa-backend 2>/dev/null || true
          docker rm -f chatqa-backend 2>/dev/null || true
          
          # ลบเฉพาะ backend images เก่า
          echo "🗑️ ลบ backend images เก่า..."
          docker rmi $(docker images "ghcr.io/phm-oh/chatqa_backend" -q) 2>/dev/null || true
          
          # ตรวจสอบว่า Portainer ยังอยู่
          if docker ps | grep -q portainer; then
            echo "✅ Portainer ยังทำงานอยู่"
          else
            echo "⚠️ Portainer หายไป - เริ่มใหม่..."
            docker run -d --name portainer --restart=always \
              -p 9000:9000 -p 9443:9443 \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v portainer_data:/data \
              portainer/portainer-ce:latest
          fi
          
          # Pull และ start backend service
          echo "🔽 Pulling latest backend image..."
          docker-compose -f docker-compose.prod.yml pull backend
          
          echo "🚀 Starting backend service..."
          docker-compose -f docker-compose.prod.yml up -d --force-recreate backend
          
          # รอให้ backend พร้อม
          echo "⏳ รอให้ backend พร้อม..."
          sleep 20
          
          # ตรวจสอบ backend container status
          echo "🔍 ตรวจสอบ backend container..."
          docker ps | grep chatqa-backend || echo "⚠️ Backend container ไม่พบ!"
          
          # ดู logs ถ้า backend ไม่ขึ้น
          if ! docker ps | grep -q chatqa-backend; then
            echo "📋 Backend logs:"
            docker logs chatqa-backend 2>/dev/null || echo "ไม่สามารถดู logs ได้"
          fi
          
          echo "✅ Safe backend deployment completed!"
          echo "📊 Container Status:"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          
          echo "🌐 URLs:"
          echo "  Backend:   http://49.231.145.165:5555"
          echo "  Frontend:  http://49.231.145.165"
          echo "  Portainer: http://49.231.145.165:9000"
          
          # Health checks
          echo "🏥 Health Check:"
          curl -f http://localhost:5555/api/health && echo "✅ Backend OK" || echo "❌ Backend Failed"
          curl -f http://localhost:80 && echo "✅ Frontend OK" || echo "❌ Frontend Failed"
          curl -f http://localhost:9000 && echo "✅ Portainer OK" || echo "❌ Portainer Failed"

    # 3. Deployment Status
    - name: Deployment Status
      if: always() && github.ref == 'refs/heads/main'
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Safe backend deployment completed successfully!"
        else
          echo "❌ Safe backend deployment failed!"
        fi

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}